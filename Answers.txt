1.What is Pandas, and why is it commonly used in data cleaning tasks?
> Pandas is an open-source data manipulation and analysis library for Python. Pandas is widely used in data cleaning tasks because it provides a flexible and efficient way to handle, manipulate, and analyze structured data, making it an essential tool in the data science and analysis toolkit.

2.Given a DataFrame with missing values, how would you check for missing
values in each column and count the total number of missing values?
> In Pandas, we can use the isnull() method to check for missing values in each column of a DataFrame. The result is a DataFrame of the same shape as the input, where each element is either True if the corresponding element in the original DataFrame is missing or False if it is not missing. To count the total number of missing values in each column, you can use the sum() function on the resulting DataFrame.

3.How can you remove duplicates from a DataFrame while retaining the first
occurrence of each unique row?
> In Pandas, we can use the drop_duplicates() method to remove duplicate rows from a DataFrame while retaining the first occurrence of each unique row. By default, this method keeps the first occurrence and removes subsequent duplicates.

4.If you have a DataFrame with a column containing string values, how can
you convert all the values in that column to lowercase?
> We can use the str.lower() method in Pandas to convert all the string values in a specific column of a DataFrame to lowercase.

5.How do you replace missing values in a DataFrame with a specific value,
like 0, for a particular column?
> We can use the fillna() method in Pandas to replace missing values in a DataFrame with a specific value.If we want to replace missing values with 0 for a particular column, we can specify the column and the value you want to use.

6.If you have a DataFrame with a datetime column, how can you extract the
year, month, and day into separate columns?
> We can use the dt accessor to extract various components such as the year, month, and day into separate columns.

7.How can you filter rows in a DataFrame where a specific column's values
meet a certain condition (e.g., all rows where 'age' is greater than 30)?
> df['Age'] > 30 creates a boolean Series with True for rows where the 'Age' column is greater than 30 and False otherwise. This boolean Series is then used to index the DataFrame, selecting only the rows where the condition is True.

8.What is the purpose of the .apply() function in Pandas, and how would you
use it to create a new column based on values from existing columns?
> The apply() function in Pandas is used to apply a function along the axis of a DataFrame or Series. It allows to perform custom operations on the data, element-wise, column-wise, or row-wise.

9.Suppose you want to merge two DataFrames, 'df1' and 'df2,' on a common
column 'key.' How would you perform this merge operation in Pandas?
> In Pandas, we can perform a merge operation on two DataFrames using the merge() function. The merge() function allows you to merge DataFrames based on a common column.

10.